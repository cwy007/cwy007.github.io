---
layout:     post
title:      "Linux 操作系统：tar"
subtitle:   "《Linux 操作系统》tar 归档程序的用法介绍"
date:       2020-04-04 12:10:00 # date配置可以对文章进行排序：降序 desc
author:     "chanweiyan"
header-img: "img/cwy/post-bg/unix-linux.jpg"
catalog: true
tags:
  - Linux
  - Shell
---

>tar 命令可以为Linux的文件和目录创建档案。利用 tar，可以为某一特定文件创建档案（备份文件），也可以在档案中改变文件，或者向档案中加入新的文件。tar 最初被用来在磁带上创建档案，现在，用户可以在任何设备上创建档案。利用 tar 命令，可以把一大堆的文件和目录全部打包成一个文件，这对于备份文件或将几个文件组合成为一个文件以便于网络传输是非常有用的。

#### 弄清两个概念：打包和压缩

打包是指将一大堆文件或目录变成一个总的文件
压缩则是将一个大的文件通过一些压缩算法变成一个小文件。

#### 为什么要区分这两个概念呢？

这源于 Linux 中很多压缩程序只能针对一个文件进行压缩，这样当你想要压缩一大堆文件时，你得先将这一大堆文件先打成一个包（tar命令），然后再用压缩程序进行压缩（gzip bzip2命令）。

#### 示例

```bash
# 仅打包，不压缩
# -c或--create：建立新的备份文件
# -v或--verbose：显示指令执行过程
#f<备份文件> 或 --file=<备份文件>：指定备份文件
tar -cvf log.tar log2020.log

# 打包后，以 gzip 压缩
# -z或--gzip或--ungzip：通过gzip指令处理备份文件
tar -zcvf log.tar.gz log2020.log

# 打包后，以 bzip2 压缩
# -j：支持bzip2解压文件
tar -jcvf log.tar.bz2 log2020.log

# 在文件夹当中，比某个日期新的文件才备份
# -N <日期格式> 或 --newer=<日期时间>：只将较指定日期更新的文件保存到备份文件里
tar -N "2020/4/4" -zcvf log.tar.gz test
```

#### 如果最简单的使用 tar 就只要记忆下面的三种方式即可：

```bash
# 压缩：
# -j：支持bzip2解压文件
tar -jcvf filename.tar.bz2 要压缩的文件或目录名称
tar -zcvf filename.tar.gz 要压缩的文件或目录名称

# 查询：
# -t或--list：列出备份文件的内容
tar -jtvf filename.tar.bz2
tar -ztvf filename.tar.gz

# 解压缩：
# -C <目录>：这个选项用在解压缩，若要在特定目录解压缩，可以使用这个选项
# -x或--extract或--get：从备份文件中还原文件
tar -jxvf filename.tar.bz2 -C 欲解压缩的目录
tar -zxvf filename.tar.gz -C 欲解压缩的目录
```

#### 选项

```bash
tar (选项) (参数)

-A或--catenate：新增文件到以存在的备份文件；
-B：设置区块大小；
-c或--create：建立新的备份文件；
-C <目录>：这个选项用在解压缩，若要在特定目录解压缩，可以使用这个选项。
-d：记录文件的差别；
-x或--extract或--get：从备份文件中还原文件；
-t或--list：列出备份文件的内容；
-z或--gzip或--ungzip：通过gzip指令处理备份文件；
-Z或--compress或--uncompress：通过compress指令处理备份文件；
-f <备份文件>或--file=<备份文件>：指定备份文件；
-v或--verbose：显示指令执行过程；
-r：添加文件到已经压缩的文件；
-u：添加改变了和现有的文件到已经存在的压缩文件；
-j：支持bzip2解压文件；
-v：显示操作过程；
-l：文件系统边界设置；
-k：保留原有文件不覆盖；
-m：保留文件不被覆盖；
-w：确认压缩文件的正确性；
-p或--same-permissions：用原来的文件权限还原文件；
-P或--absolute-names：文件名使用绝对名称，不移除文件名称前的"/"号；
-N <日期格式> 或 --newer=<日期时间>：只将较指定日期更新的文件保存到备份文件里；
--exclude=<范本样式>：排除符合范本样式的文件。
```

#### 参考文章

1. [Linux tar 用法介绍](https://www.linuxprobe.com/linux-tar-usage.html)
